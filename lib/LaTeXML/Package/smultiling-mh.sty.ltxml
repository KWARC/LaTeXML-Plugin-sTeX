# -*- mode: Perl -*-
# /=====================================================================\ #
# | sTeX implementation for LaTeXML (smultiling-mh.sty)                 | #
# | http://github.com/KWARC/LaTeXML-Plugin-sTeX/                        | #
# |=====================================================================| #
# |  Copyright (c) Michael Kohlhase 2015.                               | #
# |  This work may be distributed and/or modified under the conditions  | #
# |  of the LaTeX Project Public License, either version 1.3 of this    | #
# |  license or later; see http://www.latex-project.org/lppl.txt        | # 
# |---------------------------------------------------------------------| #
# | Michael Kohlhase <m.kohlhase@jacobs-university.de>          #_#     | #
# | http://github.com/KWARC/sTeX                               (o o)    | #
# \=========================================================ooo==U==ooo=/ #
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
use LaTeXML::Util::Pathname;

# =======================================================
# 1. Requirements:                                      #
# =======================================================
RequirePackage('mathhub');

# =======================================================
# 2. Introduce parameters:                              #
# =======================================================
DefKeyVal('mhmodnl','title','Semiverbatim');
DefKeyVal('mhmodnl','repos','Semiverbatim');
DefKeyVal('mhmodnl','path','Semiverbatim');
DefKeyVal('mhmodnl','creators','Semiverbatim');
DefKeyVal('mhmodnl','contributors','Semiverbatim');
DefKeyVal('mhmodnl','primary','Semiverbatim');

# =======================================================
# 3. MH Variants for Multilinguality:                   #
# =======================================================
DefEnvironment('{mhmodnl} OptionalKeyVals:mhmodnl Semiverbatim Semiverbatim',
         "?#excluded()(<omdoc:theory xml:id='#2.#3' >"
         .   "?&defined(&GetKeyVal(#1,'creators'))(<dc:creator>&GetKeyVal(#1,'creators')</dc:creator>)()"
         .   "?&defined(&GetKeyVal(#1,'title'))(<dc:title>&GetKeyVal(#1,'title')</dc:title>)()"
         .   "?&defined(&GetKeyVal(#1,'contributors'))(<dc:contributor>&GetKeyVal(#1,'contributors')</dc:contributor>)()"
         .   "<omdoc:imports from='?&GetKeyVal(#1,'load')(&canonical_omdoc_path(&GetKeyVal(#1,'load')))()###2'/>"
         .   "#body"
         . "</omdoc:theory>)",
  afterDigestBegin=>sub {
    my ($stomach, $whatsit) = @_;
    my $keyval = $whatsit->getArg(1);
    my $signature = ToString($whatsit->getArg(2));
    my $language = ToString($whatsit->getArg(3));
    my $repos = ToString(GetKeyVal($keyval,'torepos'));
    my $current_repos = LookupValue('current_repos');
    if (!$repos) { $repos = $current_repos; }
    my $defpaths = LookupValue('defpath');
    my $load_path = ($$defpaths{MathHub}).$repos.'/source/'.$signature;

    if ($keyval) {
      # If we're not given load, AND the langfiles option is in effect,
      # default to #2
      if ((! $keyval->getValue('path')) && (LookupValue('smultiling_langfiles'))) {
        $keyval->setValue('load',$load_path); }
      # Always load a TeX file
      $keyval->setValue('ext','tex');
      AssignValue('modnl_signature',$signature); 
      $keyval->setValue('id',"$signature.$language"); }
    module_afterDigestBegin(@_);
    importmoduleI(@_);
    return; },
  afterDigest=>sub {
    module_afterDigest(@_); });
RawTeX('
\newenvironment{mhviewsig}[4][]{\def\@test{#1}\ifx\@test\@empty%
\begin{mhview}[id=#2,fromext=tex,toext=tex]{#3}{#4}\else%
\begin{mhview}[id=#2,#1,fromext=tex,toext=tex]{#3}{#4}\fi%
\ignorespacesandpars}
{\end{mhview}\ignorespacesandparsafterend}
\addmetakey{mhview}{sigpath}
\addmetakey{mhview}{sigrepos}
\newenvironment{mhviewnl}[3][]{\def\@test{#1}%
  \metasetkeys{mhview}{#1}%
  \if@langfiles\requiremodules{#2}{tex}\else%
    \ifx\mhview@loadsig\@empty%
    \PackageError{smultiling-mh}%
                          {Cannot load view signature}%
                          {please specify the file name via the 'sigpath' and 'sigrepos' keys!}%
    \fi
    \ifx\mhview@sigrepos\@empty%
    \requiremodules{\MathHub{\mh@currentrepos/source/\mhview@sigpath.tex}}\else%
    \requiremodules{\MathHub{\mhview@sigrepos/source/\mhview@sigpath.tex}}\fi%
  \fi% if@langfiles
  \ifx\@test\@empty%
  \begin{mhview}[id=#2.#3,fromext=tex,toext=tex]{\csuse{views@#2@from}}{\csuse{views@#2@to}}\else%
  \begin{mhview}[id=#2.#3,#1,fromext=tex,toext=tex]{\csuse{views@#2@from}}{\csuse{views@#2@to}}\fi%
  \ignorespacesandpars}
{\end{mhview}\ignorespacesandparsafterend}
');
1;
